declaration:
  call: declare
  version: 0.1
  name: "Electricity Price Service"
  description: |
    This service fetches the Nordpool electricity prices for a user-specified date.
  method: get
  params:
    userDate: string  # yyyy-mm-dd format
  returns: json

# Prepare Dates based on userDate
prepareDates:
  assign:
    userDate: ${incoming.params.userDate || new Date().toISOString().split('T')[0]}  # yyyy-mm-dd
    startDateTime: ${new Date(new Date(userDate).getTime() - 24 * 60 * 60 * 1000).toISOString().split('T')[0] + "T21:00:00.000Z"}
    endDateTime: ${userDate + "T20:59:59.000Z"}
  next: getPriceForPeriod

getPriceForPeriod:
  call: http.get
  args:
    url: https://dashboard.elering.ee/api/nps/price
    query:
      start: ${startDateTime}
      end: ${endDateTime}
  result: eleringToday
  next: assignVariables

assignVariables:
  assign:
    minPrice: ${eleringToday.response.body.data.ee.sort((a, b) => a.price - b.price)[0].price}
    minPriceTimestamp: ${eleringToday.response.body.data.ee.sort((a, b) => a.price - b.price)[0].timestamp}

    # currently doez not account for DST when changing to winter
    tallinnOffset: 10800  # Tallinn is UTC+3 during DST (3 hours in seconds)
    adjustedTimestamp: ${minPriceTimestamp + tallinnOffset} 
    adjustedHour: ${Math.floor((adjustedTimestamp % 86400) / 3600)}
    timeVar: ${("0" + adjustedHour).slice(-2) + ":00"}
  next: returnResult

returnResult:
  return: ${[userDate, timeVar, minPrice]}