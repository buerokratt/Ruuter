declaration:
  name: "Holiday Filter by Month"
  description: "Fetches and filters Estonian national holidays for a specified month in 2024."
  parameters:
    - month: "The month (1-12) for which to retrieve holidays."
  method: "get"
  return: "json"

prepare:
  assign: # MM - month
    chatId: ${incoming.body.chatId}
    authorId: ${incoming.body.authorId}
    searchTerm: "${incoming.body.input || [(new Date().getMonth() + 1).toString()]}" # default to current month - ex."10"/MM for october 
  next: makeApiCall

makeApiCall:
  call: reflect.mock
  args:
    url: "www.example.com"
    response: 
      holidays:
        # --- Riigipühad ja puhkepäevad 2024 ---
        - date: "2024-01-01"
          name: "uusaasta"
        - date: "2024-02-24"
          name: "iseseisvuspäev, Eesti Vabariigi aastapäev"
        - date: "2024-03-29"
          name: "suur reede"
        - date: "2024-03-31"
          name: "ülestõusmispühade 1. püha"
        - date: "2024-05-01"
          name: "kevadpüha"
        - date: "2024-05-19"
          name: "nelipühade 1. püha"
        - date: "2024-06-23"
          name: "võidupüha"
        - date: "2024-06-24"
          name: "jaanipäev"
        - date: "2024-08-20"
          name: "taasiseseisvumispäev"
        - date: "2024-12-24"
          name: "jõululaupäev"
        - date: "2024-12-25"
          name: "esimene jõulupüha"
        - date: "2024-12-26"
          name: "teine jõulupüha"
  result: holidayData
  next: filterHolidaysByMonth

filterHolidaysByMonth:
  assign:
    filteredHolidays: ${holidayData.response.body.holidays.filter(holiday => !isNaN(searchTerm[0]) && parseInt(searchTerm[0]) >= 1 && parseInt(searchTerm[0]) <= 12 && (new Date(holiday.date).getMonth() + 1 === parseInt(searchTerm[0])))}
  next: checkHolidays

checkHolidays:
  switch:
    - condition: ${filteredHolidays.length < 1}
      next: holidayNotFound
    - condition: ${filteredHolidays.length === 1}
      next: assignSingleValue
    - condition: ${filteredHolidays.length > 1}
      next: formatValue

holidayNotFound:
  assign:
    res: "Ei leia riigipühi antud kuus"
  next: formatMessages

assignSingleValue:
  assign:
    res: "Antud kuus on ${filteredHolidays[0].name} - ${filteredHolidays[0].date}"
  next: formatMessages

formatValue:
  call: http.post
  args:
    url: "[#DMAPPER]/common-services//hbs/calendar/national-holidays/get_national_holiday_by_month"
    body:
      data: ${filteredHolidays}
  result: holiday
  next: assignResponse

assignResponse:
  assign:
    res: ${holiday.response.body}
  next: formatMessages

# format throgh DM bot response to messages
formatMessages:
  call: http.post
  args:
    url: "[#DMAPPER]/common-services/hbs/bot_responses_to_messages"
    headers:
      type: json
    body:
      data:
        {
          "botMessages": "${[res]}",
          "chatId": "${chatId}",
          "authorId": "${authorId}",
          "authorFirstName": "",
          "authorLastName": "",
          "authorTimestamp": "${new Date().toISOString()}",
          "created": "${new Date().toISOString()}",
        }
  result: formatMessage
  next: return_result

return_result:
  return: ${formatMessage.response.body}
  next: end