declaration:
  call: declare
  version: 0.1
  name: "Check Today's Holiday"
  description: |
    This service checks if today is a national holiday based on a mocked API response.
  method: get
  params: []
  returns: json

prepare:
  assign:
    today: ${new Date().toISOString().split("T")[0]}
  next: makeApiCall

makeApiCall:
  call: reflect.mock
  args:
    url: "www.example.com"
    response: 
      holidays:
        # --- Riigipühad ja puhkepäevad 2024 ---
        - date: "2024-01-01"
          name: "uusaasta"
        - date: "2024-02-24"
          name: "iseseisvuspäev, Eesti Vabariigi aastapäev"
        - date: "2024-03-29"
          name: "suur reede"
        - date: "2024-03-31"
          name: "ülestõusmispühade 1. püha"
        - date: "2024-05-01"
          name: "kevadpüha"
        - date: "2024-05-19"
          name: "nelipühade 1. püha"
        - date: "2024-06-23"
          name: "võidupüha"
        - date: "2024-06-24"
          name: "jaanipäev"
        - date: "2024-08-20"
          name: "taasiseseisvumispäev"
        - date: "2024-12-24"
          name: "jõululaupäev"
        - date: "2024-12-25"
          name: "esimene jõulupüha"
        - date: "2024-12-26"
          name: "teine jõulupüha"
  result: holidayData
  next: validateHoliday

validateHoliday:
  assign:
    holiday: ${holidayData.response.body.holidays.find(holiday => holiday.date === today)}
  next: checkHoliday

checkHoliday:
  switch:
    - condition: ${!holiday}
      next: holidayNotFound
  next: formatValue

formatValue:
  assign:
    holiday:
      result: "Täna on ${holiday.name}"
  next: returnValue

returnValue:
  return: ${holiday}
  next: end
# -------------------------------------------------- 
holidayNotFound:
  assign:
    noHoliday:
      result: "Täna ei ole riigpüha."
  next: returnNoValue

returnNoValue:
  return: ${noHoliday}
  next: end